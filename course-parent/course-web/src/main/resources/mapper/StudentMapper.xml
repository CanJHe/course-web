<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.canJ.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.canJ.pojo.Student" >
    <id column="StudentId" property="studentid" jdbcType="INTEGER" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="stu_phone" property="stuPhone" jdbcType="VARCHAR" />
    <result column="stu_class" property="stuClass" jdbcType="INTEGER" />
    <result column="SelfDescn" property="selfdescn" jdbcType="VARCHAR" />
    <result column="stu_state" property="stuState" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    StudentId, Name, Password, stu_phone, stu_class, SelfDescn, stu_state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.canJ.pojo.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where StudentId = #{studentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where StudentId = #{studentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.canJ.pojo.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.canJ.pojo.Student" >
    insert into student (StudentId, Name, Password, 
      stu_phone, stu_class, SelfDescn, 
      stu_state)
    values (#{studentid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{stuPhone,jdbcType=VARCHAR}, #{stuClass,jdbcType=INTEGER}, #{selfdescn,jdbcType=VARCHAR}, 
      #{stuState,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.canJ.pojo.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        StudentId,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="stuPhone != null" >
        stu_phone,
      </if>
      <if test="stuClass != null" >
        stu_class,
      </if>
      <if test="selfdescn != null" >
        SelfDescn,
      </if>
      <if test="stuState != null" >
        stu_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="stuPhone != null" >
        #{stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="stuClass != null" >
        #{stuClass,jdbcType=INTEGER},
      </if>
      <if test="selfdescn != null" >
        #{selfdescn,jdbcType=VARCHAR},
      </if>
      <if test="stuState != null" >
        #{stuState,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.canJ.pojo.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.studentid != null" >
        StudentId = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.stuPhone != null" >
        stu_phone = #{record.stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.stuClass != null" >
        stu_class = #{record.stuClass,jdbcType=INTEGER},
      </if>
      <if test="record.selfdescn != null" >
        SelfDescn = #{record.selfdescn,jdbcType=VARCHAR},
      </if>
      <if test="record.stuState != null" >
        stu_state = #{record.stuState,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set StudentId = #{record.studentid,jdbcType=INTEGER},
      Name = #{record.name,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      stu_phone = #{record.stuPhone,jdbcType=VARCHAR},
      stu_class = #{record.stuClass,jdbcType=INTEGER},
      SelfDescn = #{record.selfdescn,jdbcType=VARCHAR},
      stu_state = #{record.stuState,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.canJ.pojo.Student" >
    update student
    <set >
      <if test="name != null" >
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="stuPhone != null" >
        stu_phone = #{stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="stuClass != null" >
        stu_class = #{stuClass,jdbcType=INTEGER},
      </if>
      <if test="selfdescn != null" >
        SelfDescn = #{selfdescn,jdbcType=VARCHAR},
      </if>
      <if test="stuState != null" >
        stu_state = #{stuState,jdbcType=SMALLINT},
      </if>
    </set>
    where StudentId = #{studentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.canJ.pojo.Student" >
    update student
    set Name = #{name,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      stu_phone = #{stuPhone,jdbcType=VARCHAR},
      stu_class = #{stuClass,jdbcType=INTEGER},
      SelfDescn = #{selfdescn,jdbcType=VARCHAR},
      stu_state = #{stuState,jdbcType=SMALLINT}
    where StudentId = #{studentid,jdbcType=INTEGER}
  </update>

  <select id="selectStudentByNameOrClass" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from student
    <where>
      Name LIKE CONCAT(CONCAT('%',#{_paramter}),'%')
      OR
      stu_class LIKE CONCAT(CONCAT('%',#{_paramter}),'%')
    </where>
  </select>

</mapper>